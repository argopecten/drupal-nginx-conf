#######################################################
###  nginx.conf common Drupal config start
#######################################################

autoindex            off;

### Deny not compatible request methods without 405 response.
if ( $request_method !~ ^(?:GET|HEAD|POST|PUT|DELETE|OPTIONS)$ ) { return 403; }

### Deny listed requests for security reasons.
if ($is_denied) { return 403; }

### Add recommended HTTP headers
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";


#######################################################
### Drupal specifix location rules
#######################################################

### If favicon else return error 204.
location = /favicon.ico {
  access_log    off;
  log_not_found off;
  expires       30d;
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  try_files  /sites/$main_site_name/files/favicon.ico $uri =204;
}

### Support for https://drupal.org/project/robotstxt module
### and static file in the sites/domain/files directory.
location = /robots.txt {
  access_log    off;
  log_not_found off;
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  try_files /sites/$main_site_name/files/$host.robots.txt /sites/$main_site_name/files/robots.txt $uri @drupal;
}

### Allow local access to support wget method in Aegir settings
### for running sites cron in Drupal 8.
location ^~ /cron/ {
  try_files    $uri @drupal;
}

### Send search to php-fpm early so searching for node.js will work.
location ^~ /search {
  location ~* ^/search {
    if ( $is_bot ) { return 403; }
    try_files $uri @drupal;
  }
}

### Support for backup_migrate module download/restore/delete actions.
location ^~ /admin {
  if ( $is_bot ) { return 403; }
  access_log off;
  try_files $uri @drupal;
}

### Deny listed requests for security reasons.
location ~* (\.(?:git.*|htaccess|engine|config|inc|ini|info|install|make|module|profile|test|pl|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\..*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock))$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig\.save))$ {
  access_log off;
  return 404;
}

### Deny listed requests for security reasons.
location ~* /(?:modules|themes|libraries)/.*\.(?:txt|md)$ {
  access_log off;
  return 404;
}

### Deny often flooded URI for performance reasons
location = /autodiscover/autodiscover.xml {
  access_log off;
  return 404;
}

### Deny some not supported URI like cgi-bin on the Nginx level.
location ~* (?:cgi-bin|vti-bin) {
  access_log off;
  return 404;
}

### The files/styles support.
location ~* /sites/.*/files/styles/(.*)$ {
  access_log off;
  log_not_found off;
  expires    30d;
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  try_files  /sites/$main_site_name/files/styles/$1 $uri @drupal;
}

### Send requests with /external/ and /system/ URI keywords to @drupal.
location ~* /(?:external|system)/ {
  access_log off;
  log_not_found off;
  expires    30d;
  try_files  $uri @drupal;
}

### Deny direct access to config files in Drupal 8.
location ~* ^/sites/.*/files/config_.* {
  access_log off;
  deny all;
}

### Private downloads are always sent to the drupal backend.
### Note: this location doesn't work with X-Accel-Redirect.
location ~* ^/sites/.*/files/private/ {
  if ( $is_bot ) { return 403; }
  access_log off;
  rewrite    ^/sites/.*/files/private/(.*)$ $scheme://$host/system/files/private/$1 permanent;
  try_files  $uri @drupal;
}

### Deny direct access to private downloads in sites/domain/private.
location ~* ^/sites/.*/private/ {
  internal;
  if ( $is_bot ) { return 403; }
  access_log off;
}

### Deny direct access to private downloads also for short, rewritten URLs.
location ~* /files/private/ {
  internal;
  if ( $is_bot ) { return 403; }
  access_log off;
}

### Support for dynamic .json requests.
location ~* \.json$ {
  try_files $uri @drupal;
}

### Support for static .json files with fast 404 +Boost compatibility.
location ~* ^/sites/.*/files/.*\.json$ {
  access_log  off;
  tcp_nodelay off;
  expires     max; ### if using aggregator
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  try_files  uri =404;
}

### Map /files/ shortcut early to avoid overrides in other locations.
location ^~ /files/ {

  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  ### Sub-location to support files/styles with short URIs.
  location ~* /files/styles/(.*)$ {
    access_log off;
    log_not_found off;
    expires    30d;
    rewrite  ^/files/(.*)$  /sites/$main_site_name/files/$1 last;
    try_files  /sites/$main_site_name/files/styles/$1 $uri @drupal;
  }
  location ~* ^.+\.(?:pdf|jpe?g|gif|png|ico|bmp|svg|swf|docx?|xlsx?|pptx?|tiff?|txt|rtf|vcard|vcf|cgi|bat|pl|dll|class|otf|ttf|woff2?|eot|less|avi|mpe?g|mov|wmv|mp3|ogg|ogv|wav|midi|zip|tar|t?gz|rar|dmg|exe|apk|pxl|ipa|css|js)$ {
    expires       30d;
    tcp_nodelay   off;
    access_log    off;
    log_not_found off;
    rewrite  ^/files/(.*)$  /sites/$main_site_name/files/$1 last;
    try_files   $uri =404;
  }
  try_files $uri @drupal;
}

### Serve & no-log static files & images directly,
### without all standard drupal rewrites, php-fpm etc.
location ~* ^.+\.(?:jpe?g|gif|png|ico|bmp|svg|swf|docx?|xlsx?|pptx?|tiff?|txt|rtf|vcard|vcf|cgi|bat|pl|dll|class|otf|ttf|woff2?|eot|less|mp3|wav|midi)$ {
  expires       30d;
  tcp_nodelay   off;
  access_log    off;
  log_not_found off;
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  rewrite     ^/images/(.*)$  /sites/$main_site_name/files/images/$1 last;
  rewrite     ^/.+/sites/.+/files/(.*)$  /sites/$main_site_name/files/$1 last;
  try_files   $uri =404;
}

### Serve bigger media/static/archive files directly,
### without all standard drupal rewrites, php-fpm etc.
location ~* ^.+\.(?:avi|mpe?g|mov|wmv|ogg|ogv|zip|tar|t?gz|rar|dmg|exe|apk|pxl|ipa)$ {
  expires     30d;
  tcp_nodelay off;
  tcp_nopush  off;
  access_log    off;
  log_not_found off;
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  rewrite     ^/.+/sites/.+/files/(.*)$  /sites/$main_site_name/files/$1 last;
  try_files   $uri =404;
}

### Serve & no-log some static files directly,
### but only from the files directory to not break
### dynamically created pdf files or redirects for
### legacy URLs with asp/aspx extension.
location ~* ^/sites/.+/files/.+\.(?:pdf|aspx?)$ {
  expires       30d;
  tcp_nodelay   off;
  access_log    off;
  log_not_found off;
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  try_files   $uri =404;
}

### Serve & no-log some static files as is, without forcing default_type.
location ~* /(?:cross-?domain)\.xml$ {
  access_log  off;
  tcp_nodelay off;
  expires     30d;
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  try_files   $uri =404;
}

### Deny crawlers
location ~* /(?:ahah|ajax|batch|autocomplete|done|progress/|x-progress-id|js/.*) {
  if ( $is_bot ) { return 403; }
  access_log off;
  log_not_found off;
  try_files $uri @drupal;
}

### Serve & no-log static helper files used in some wysiwyg editors.
location ~* ^/sites/.*/(?:modules|libraries)/(?:contrib/)?(?:tinybrowser|f?ckeditor|tinymce)/.*\.(?:html?|xml)$ {
  if ( $is_bot ) { return 403; }
  access_log      off;
  tcp_nodelay     off;
  expires         30d;
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  try_files $uri =404;
}

### Serve & no-log any not specified above static files directly.
location ~* ^/sites/.*/files/ {
  access_log      off;
  tcp_nodelay     off;
  expires         30d;
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  try_files $uri =404;
}

### Feeds: set correct mime type.
location ~* \.xml$ {
  location ~* ^/autodiscover/autodiscover\.xml {
    access_log off;
    return 400;
  }
  if ( $request_method = POST ) {
    return 405;
  }
  error_page 405 = @drupal;
  access_log off;
  add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
  add_header Access-Control-Allow-Origin *;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  charset    utf-8;
  types { }
  default_type text/xml;
  try_files $uri @drupal;
}

### Deny bots on never cached uri.
location ~* ^/(?:admin|user|logout) {
  if ( $is_bot ) { return 403; }
  access_log off;
  try_files $uri @drupal;
}
location ~* ^/\w\w/(?:admin|user|logout) {
  if ( $is_bot ) { return 403; }
  access_log off;
  try_files $uri @drupal;
}

### Protect from DoS attempts on never cached uri.
location ~* ^/(?:.*/)?(?:node/[0-9]+/edit|node/add|comment/reply) {
  if ( $is_bot ) { return 403; }
  access_log off;
  try_files $uri @drupal;
}

### Protect from DoS attempts on never cached uri.
location ~* ^/(?:.*/)?(?:node/[0-9]+/delete|approve) {
  if ( $is_bot ) { return 403; }
  access_log off;
  try_files $uri @drupal;
}

#
location / {
  try_files $uri @drupal;
}

### Route request to drupal with clean URLs support.
location @drupal {
  try_files $uri /index.php?$query_string;
}

# Route requests to FastCGI servers
location = /index.php {
  # capturing the $fastcgi_script_name variable (first) and the $fastcgi_path_info variable
  fastcgi_split_path_info ^(.+?\.php)(|/.*)$;

  # Ensure the php file exists. Mitigates CVE-2019-11043
  try_files $fastcgi_script_name =404;

  # Parameter passed to the FastCGI server
  include fastcgi_params;
  fastcgi_param HTTP_PROXY      "";  # Block httpoxy attacks. See https://httpoxy.org/.
  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # the script name to be executed by PHP
  fastcgi_param PATH_INFO       $fastcgi_path_info; #
  fastcgi_param QUERY_STRING    $query_string; # pass request parameters to PHP

  # passing FastCGI server responses (300 or higher) to clients
  fastcgi_intercept_errors      on;

  # address of the FastCGI server, as unix socket path
  fastcgi_pass unix:/run/php/php$V-fpm.sock;
}

### Allow access to /authorize.php and /update.php only for logged in admin user.
location ~* ^/(?:core/)?(?:authorize|update)\.php$ {
  error_page 418 = @allowupdate;
  return 404;
}

### Internal location for /authorize.php and /update.php restricted access.
location @allowupdate {
  limit_conn   limreq 88;
  tcp_nopush   off;
  keepalive_requests 0;
  access_log   off;
  try_files    $uri =404; ### check for existence of php file first
  fastcgi_pass unix:/var/run/php/php7$V-fpm.sock;
}

###
location ~* ^.+\.php$ {
  return 404;
}
#######################################################
###  nginx.conf common Drupal config end
#######################################################
